demo()
cls
library(dplyr)
library(ggplot2)
# import data set
data <- read.csv("data.csv", na.strings = "NA")
head(data)
# import data set
data <- read.csv("data.csv", na.strings = "NA")
setwd("C:/Users/rober/OneDrive/Desktop/CAs/data exploration and communication")
library(dplyr)
library(ggplot2)
# import data set
data <- read.csv("data.csv", na.strings = "NA")
head(data)
# remove first dose refused column, this column contains only NA values
data <- data[, -which(names(data) == 'FirstDoseRefused')]
# check row count
print( ncol(data))
# remove missing values and check row count
data <- na.omit(data)
print(nrow(data))
head(data)
# distinct countries
distinct_countries <- unique(data$ReportingCountry)
# distinct region
distinct_regions <- unique(data$Region)
print(length(distinct_countries))
print(length(distinct_regions))
# remove region column
data <- data[, -which(names(data) == 'Region')]
# check for outliers
# Boxplot for a population variable
boxplot(data$Denominator , main = "Boxplot of Denominator", ylab = "Denominator")
# Boxplot for a population variable
boxplot(data$Population , main = "Boxplot of Population", ylab = "Population")
first_dose <- data$Population
# Create a histogram
ggplot(data, aes(x = FirstDose)) +
geom_histogram(binwidth = 1e5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of FirstDose", x = "FirstDose", y = "Frequency")
total_doses_per_group <- aggregate(NumberDosesReceived ~ TargetGroup, data = data, sum)
# Create a bar chart
ggplot(total_doses_per_group, aes(x = TargetGroup, y = NumberDosesReceived, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Total Doses Administered by Target Group", x = "Target Group", y = "Total Doses Administered") +
theme_minimal()
View(total_doses_per_group)
total_doses_per_group <- subset(total_doses_per_group, TargetGroup != "ALL")
# Create a bar chart
ggplot(total_doses_per_group, aes(x = TargetGroup, y = NumberDosesReceived, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Total Doses Administered by Target Group", x = "Target Group", y = "Total Doses Administered") +
theme_minimal()
ggplot(data, aes(x = Population, group = ReportingCountry, color = ReportingCountry)) +
geom_freqpoly(binwidth = 1e6) +
labs(title = "Frequency Polygon of Population by ReportingCountry", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Population, group = Denominator, color = Denominator)) +
geom_freqpoly(binwidth = 1e6) +
labs(title = "Frequency Polygon of Population by Denominator", x = "Population", y = "Frequency") +
theme_minimal()
# Create a bar chart
ggplot(total_doses_per_group, aes(x = TargetGroup, y = NumberDosesReceived, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Total Doses Administered per target Group", x = "Target Group", y = "Total Doses Administered") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Vaccine)) +
geom_count() +
labs(title = "Relationship between ReportingCountry and Vaccine", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Vaccine, size = Population, color = Population)) +
geom_point() +
labs(title = "Scatter Plot of Population, Vaccine, and ReportingCountry", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Vaccine, size = Population, color = Population)) +
geom_point() +
labs(title = "Scatter Plot of Population, Vaccine, and ReportingCountry", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = Group, y = Vaccine, fill = ..count..)) +
geom_tile() +
stat_count(geom = "text", aes(label = ..count..), vjust = 1) +
labs(title = "Heatmap between Group and Vaccine", x = "Group", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = Group, y = Vaccine, fill = after_stat(count))) +
geom_tile() +
stat_count(geom = "text", aes(label = after_stat(count)), vjust = 1) +
labs(title = "Heatmap between Group and Vaccine", x = "Group", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = TargetGroup, y = Vaccine, fill = after_stat(count))) +
geom_tile() +
stat_count(geom = "text", aes(label = after_stat(count)), vjust = 1) +
labs(title = "Heatmap between Group and Vaccine", x = "Group", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Vaccine, size = Population, color = Population)) +
geom_point() +
labs(title = "Scatter Plot of Population, Vaccine, and ReportingCountry", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Vaccine, size = Population, color = Population)) +
geom_count() +
labs(title = "Scatter Plot of Population, Vaccine, and ReportingCountry", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
# Create a bar chart
ggplot(total_doses_per_group, aes(x = TargetGroup, y = NumberDosesReceived, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Total Doses Administered per target Group", x = "Target Group", y = "Total Doses Administered") +
theme_minimal()
ggplot(data, aes(x = Population, group = Denominator, color = Denominator)) +
geom_freqpoly(binwidth = 1e6) +
labs(title = "Frequency Polygon of Population by Denominator", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Vaccine)) +
geom_count() +
labs(title = "Relationship between ReportingCountry and Vaccine", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
# two categorical variables and one continious
ggplot(data, aes(x = ReportingCountry, y = Vaccine, size = Population, color = Population)) +
geom_count() +
labs(title = "Scatter Plot of Population, Vaccine, and ReportingCountry", x = "Reporting Country", y = "Vaccine") +
theme_minimal()
ggplot(data, aes(x = Population, group = Denominator, color = Denominator)) +
geom_freqpoly(binwidth = 1e6) +
labs(title = "Frequency Polygon of Population by Denominator", x = "Population", y = "Frequency") +
theme_minimal()
total_vaccine_types <- data %>%
group_by(ReportingCountry) %>%
summarize(TotalVaccineTypes = n_distinct(Vaccine))
# Create a bar chart
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Total Number of Vaccine Types vs Reporting Country", x = "Reporting Country", y = "Total Vaccine Types") +
theme_minimal()
Total
different_vaccines_per_country <- data %>%
group_by(ReportingCountry) %>%
summarize(TotalVaccineTypes = n_distinct(Vaccine))
# Create a bar chart
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Total Number of Vaccine Types vs Reporting Country", x = "Reporting Country", y = "Total Vaccine Types") +
theme_minimal()
# number of different vaccines used per country
different_vaccines_per_country <- data %>%
group_by(ReportingCountry) %>%
summarize(TotalVaccineTypes = n_distinct(Vaccine))
View(different_vaccines_per_country)
# number of different vaccines used per country
different_vaccines_per_country <- data %>%
group_by(ReportingCountry) %>%
summarize(DifferentVaccinesNumber = n_distinct(Vaccine))
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Total Number of Vaccine Types vs Reporting Country", x = "Reporting Country", y = "Different Vaccine Used") +
theme_minimal()
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Total Number of Different Vaccine Types Used vs Reporting Country", x = "Reporting Country", y = "Different Vaccine Used") +
theme_minimal()
# Boxplots for numerical variables grouped by categorical variables
par(mfrow = c(2, 2))  # Adjust rows and columns based on your data
boxplot(FirstDose ~ ReportingCountry, data = data, main = "FirstDose by ReportingCountry")
boxplot(SecondDose ~ ReportingCountry, data = data, main = "SecondDose by ReportingCountry")
boxplot(FirstDose ~ TargetGroup, data = data, main = "FirstDose by TargetGroup")
boxplot(SecondDose ~ TargetGroup, data = data, main = "SecondDose by TargetGroup")
par(mfrow = c(1, 1))  # Reset to default
ggplot(data, aes(x = data$FirstDose, fill = data$ReportingCountry)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of FirstDose by ReportingCountry", x = "FirstDose", y = "Density")
boxplot( DoseAdditional1 ~ ReportingCountry, data = data, main = "FirstDose by TargetGroup")
# Boxplots for numerical variables grouped by categorical variables
par(mfrow = c(2, 2))  # Adjust rows and columns based on your data
boxplot(FirstDose ~ ReportingCountry, data = data, main = "FirstDose by ReportingCountry")
boxplot(SecondDose ~ ReportingCountry, data = data, main = "SecondDose by ReportingCountry")
boxplot(DoseAdditional1 ~ ReportingCountry, data = data, main = "Dose Additional 1 by ReportingCountry")
boxplot(DoseAdditional1 ~ ReportingCountry, data = data, main = "Dose Additional 2 by ReportingCountry")
par(mfrow = c(1, 1))  # Reset to default
boxplot(DoseAdditional2 ~ ReportingCountry, data = data, main = "Dose Additional 2 by ReportingCountry")
ggplot(data, aes(x = Population)) +
geom_histogram(binwidth = 1e6, fill = "skyblue", color = "black") +
labs(title = "Histogram of Population", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Population)) +
geom_histogram(binwidth = 1e6, breaks = seq(0, max(data$Population) + 1e6, 1e6), fill = "skyblue", color = "black") +
labs(title = "Histogram of Population", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Population)) +
geom_histogram(binwidth = 1e6, fill = "skyblue", color = "black") +
labs(title = "Histogram of Population", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Population)) +
geom_histogram( fill = "skyblue", color = "black") +
labs(title = "Histogram of Population", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Population)) +
geom_histogram( fill = "blue", color = "black") +
labs(title = "Histogram of Population", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Population)) +
geom_histogram( fill = "lightblue", color = "black") +
labs(title = "Histogram of Population", x = "Population", y = "Frequency") +
theme_minimal()
ggplot(data, aes(x = Vaccine, fill = ReportingCountry)) +
geom_bar(position = "stack") +
labs(title = "Bar Chart of Vaccine Counts by ReportingCountry", x = "Vaccine", y = "Count") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, fill = Vaccine)) +
geom_bar(position = "stack") +
labs(title = "Bar Chart of Vaccine Counts by ReportingCountry", x = "Vaccine", y = "Count") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, fill = Vaccine)) +
geom_bar(position = "stack") +
labs(title = "Bar Chart of Vaccine Counts by ReportingCountry", x = "Country", y = "Count") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, fill = Vaccine)) +
geom_bar() +
labs(title = "Bar Chart of Vaccine Counts by ReportingCountry", x = "Country", y = "Count") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, fill = Vaccine)) +
geom_bar() +
labs(title = "Bar Chart of Vaccine Counts by ReportingCountry", x = "Country", y = "Count")
ggplot(data, aes(x = ReportingCountry, fill = Vaccine)) +
geom_bar() +
labs(title = "Bar Chart of Vaccine Counts by ReportingCountry", x = "Country", y = "Count") +
theme_minimal()
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Total Number of Different Vaccine Types Used vs Reporting Country", x = "Reporting Country", y = "Different Vaccine Used") +
theme_minimal()
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar() +
labs(title = "Total Number of Different Vaccine Types Used vs Reporting Country", x = "Reporting Country", y = "Different Vaccine Used") +
theme_minimal()
numerical_columns <- data[, c("FirstDose", "SecondDose","NumberDosesReceived","DoseAdditional1","DoseAdditional2","UnknownDose","Denominator", "Population")]
different_vaccines_per_country <- data %>%
group_by(ReportingCountry) %>%
summarize(DifferentVaccinesNumber = n_distinct(Vaccine))
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Total Number of Different Vaccine Types Used vs Reporting Country", x = "Reporting Country", y = "Different Vaccine Used") +
theme_minimal()
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes, fill = ReportingCountry)) +
geom_bar() +
labs(title = "Total Number of Different Vaccine Types Used vs Reporting Country", x = "Reporting Country", y = "Different Vaccine Used") +
theme_minimal()
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes) +
different_vaccines_per_country <- data %>%
group_by(ReportingCountry) %>%
summarize(DifferentVaccinesNumber = n_distinct(Vaccine))
ggplot(total_vaccine_types, aes(x = ReportingCountry, y = TotalVaccineTypes) +
ggplot(data, aes(x = ReportingCountry, y = Population, fill = ReportingCountry)) +
geom_boxplot() +
labs(title = "Boxplot of Population by ReportingCountry", x = "Reporting Country", y = "Population") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Population, ) +
ggplot(data, aes(x = ReportingCountry, y = Population ) +
ggplot(data, aes(x = ReportingCountry, y = Population, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Population by Reporting Country", x = "Reporting Country", y = "Population") +
theme_minimal()
ggplot(data, aes(x = ReportingCountry, y = Population, fill = ReportingCountry)) +
ggplot(data, aes(x = ReportingCountry, y = Population, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Population by Reporting Country", x = "Reporting Country", y = "Population") +
theme_minimal()
# Create a bar chart
ggplot(max_population_by_country, aes(x = ReportingCountry, y = MaxPopulation, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Max Population by Reporting Country", x = "Reporting Country", y = "Max Population") +
theme_minimal()
max_population_by_country <- data %>%
group_by(ReportingCountry) %>%
summarize(MaxPopulation = max(Population))
# Create a bar chart
ggplot(max_population_by_country, aes(x = ReportingCountry, y = MaxPopulation, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Max Population by Reporting Country", x = "Reporting Country", y = "Max Population") +
theme_minimal()
max_population_by_country <- data %>%
group_by(ReportingCountry) %>%
summarize(Population= max(Population))
# Create a bar chart
ggplot(max_population_by_country, aes(x = ReportingCountry, y = MaxPopulation, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Max Population by Reporting Country", x = "Reporting Country", y = "Max Population") +
theme_minimal()
# Create a bar chart
ggplot(max_population_by_country, aes(x = ReportingCountry, y = Population, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Max Population by Reporting Country", x = "Reporting Country", y = "Max Population") +
theme_minimal()
# Create a bar chart
ggplot(max_population_by_country, aes(x = ReportingCountry, y = Population, fill = ReportingCountry)) +
geom_bar(stat = "identity") +
labs(title = "Population by Reporting Country", x = "Reporting Country", y = "Max Population") +
theme_minimal()
ggplot(total_doses_per_group, aes(x = TargetGroup, y = NumberDosesReceived, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Total Doses Administered per target Group", x = "Target Group", y = "Total Doses Administered") +
theme_minimal()
View(total_doses_per_group)
View(data)
data$TotalDoses <- rowSums(data[,c("FirstDose","SecondDose","DoseAdditional1"
,"DoseAdditional2","DoseAdditional3","DoseAdditional4",
"DoseAdditional5","UnknownDose")])
View(data)
total_doses_per_group <- data %>%
group_by(TargetGroup) %>%
summarize(TotalDoses = sum(TotalDoses))
ggplot(total_doses_per_group, aes(x = TargetGroup, y = TotalDoses, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Total Doses per Target Group", x = "Target Group", y = "Total Doses") +
theme_minimal()
View(total_doses_per_group)
# remove row  'ALL'
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'ALL')
# remove row  'ALL',"AGEUNK', 'HCW', 'LTCF'
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'ALL' && TargetDroup != 'HCW')
# remove row  'ALL',"AGEUNK', 'HCW', 'LTCF'
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'ALL' & TargetDroup != 'HCW')
# remove row  'ALL',"AGEUNK', 'HCW', 'LTCF'
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'ALL')
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'LTCF')
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'AgeUNK')
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'HCW')
total_doses_per_group <- total_doses_per_group %>%
filter(TargetGroup != 'Age<18')
# display bar chart of total doses per age group
ggplot(total_doses_per_group, aes(x = TargetGroup, y = TotalDoses, fill = TargetGroup)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Total Doses per Target Group", x = "Target Group", y = "Total Doses") +
theme_minimal()
